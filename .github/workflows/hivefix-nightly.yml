name: HiveFix Nightly Build & Test

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build all components
      run: |
        cd sentient-shell
        cargo build --release
        cd ../sentient-kernel
        cargo build --release --target x86_64-unknown-uefi
        cd ../sentient-bootloader
        cargo build --release --target x86_64-unknown-uefi
    
    - name: Run tests
      run: |
        cd sentient-shell
        cargo test --all-features
    
    - name: Run HiveFix self-test
      run: |
        cd sentient-shell
        # Create test error log
        mkdir -p /tmp/sentient-errors
        echo "[ERROR] Test error for HiveFix detection" > /tmp/sentient-errors.log
        
        # Run hivefix in test mode
        timeout 30s cargo run --release -- -c "pkg install hivefix && hivefix status" || true
    
    - name: Check for HiveFix patches
      id: check-patches
      run: |
        # Check if HiveFix generated any patches
        if [ -f sentient-shell/hivefix-patches.json ]; then
          echo "patches_found=true" >> $GITHUB_OUTPUT
        else
          echo "patches_found=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Pull Request
      if: steps.check-patches.outputs.patches_found == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "ðŸ¤– HiveFix: Apply automated fixes"
        title: "[HiveFix] Automated fixes from nightly build"
        body: |
          ## ðŸ¤– HiveFix Automated Fixes
          
          This PR contains automated fixes generated by the HiveFix self-healing agent during the nightly build.
          
          ### Changes
          - Applied patches for detected errors
          - All fixes were tested in sandbox environment
          - Confidence level: High
          
          ### Review Guidelines
          - Check patch correctness
          - Verify no security issues introduced
          - Ensure fixes align with project standards
          
          Generated by HiveFix v1.0.0
        branch: hivefix/automated-fixes-${{ github.run_number }}
        delete-branch: true
        labels: |
          hivefix
          automated
          
  ollama-integration:
    runs-on: self-hosted # Requires runner with Ollama access
    if: github.event_name == 'workflow_dispatch' # Only on manual trigger
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Test Ollama Integration
      run: |
        cd sentient-shell
        # Test with actual Ollama instance
        OLLAMA_URL=http://192.168.69.197:11434 cargo test ollama_integration --features integration-tests
        
    - name: Generate AI Report
      run: |
        # Ask Ollama to analyze test results
        curl -X POST http://192.168.69.197:11434/api/generate \
          -H "Content-Type: application/json" \
          -d '{
            "model": "deepseek-v2:16b",
            "prompt": "Analyze these test results and suggest improvements...",
            "stream": false
          }' > ai-report.json